<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[New Slang]]></title><description><![CDATA[blog by anshuman sahoo]]></description><link>https://anshu92.github.io/blog</link><image><url>/images/cover/collage.jpg</url><title>New Slang</title><link>https://anshu92.github.io/blog</link></image><generator>RSS for Node</generator><lastBuildDate>Sun, 22 Jan 2017 07:04:42 GMT</lastBuildDate><atom:link href="https://anshu92.github.io/blog/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Customer Segments Project]]></title><description><![CDATA[<div class="sect2">
<h3 id="_udacity_machine_learning_nanodgree_unsupervised_learning_project">Udacity Machine Learning Nanodgree, Unsupervised Learning project</h3>

</div>
<div class="sect1">
<h2 id="_getting_started">Getting Started</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In this project, you will analyze a dataset containing data on various customers' annual spending amounts (reported in <strong>monetary units</strong>) of diverse product categories for internal structure. One goal of this project is to best describe the variation in the different types of customers that a wholesale distributor interacts with. Doing so would equip the distributor with insight into how to best structure their delivery service to meet the needs of each customer.</p>
</div>
<div class="paragraph">
<p>The dataset for this project can be found on the [UCI Machine Learning Repository](<a href="https://archive.ics.uci.edu/ml/datasets/Wholesale+customers" class="bare">https://archive.ics.uci.edu/ml/datasets/Wholesale+customers</a>). For the purposes of this project, the features <code>'Channel'</code> and <code>'Region'</code> will be excluded in the analysis â€” with focus instead on the six product categories recorded for customers.</p>
</div>
<div class="paragraph">
<p>Run the code block below to load the wholesale customers dataset, along with a few of the necessary Python libraries required for this project. You will know the dataset loaded successfully if the size of the dataset is reported.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Import libraries necessary for this project
import numpy as np
import pandas as pd
from IPython.display import display # Allows the use of display() for DataFrames

# Import supplementary visualizations code visuals.py
import visuals as vs

# Pretty display for notebooks
%matplotlib inline

# Load the wholesale customers dataset
try:
    data = pd.read_csv("customers.csv")
    data.drop(['Region', 'Channel'], axis = 1, inplace = True)
    print "Wholesale customers dataset has {} samples with {} features each.".format(*data.shape)
except:
    print "Dataset could not be loaded. Is the dataset missing?"</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>Wholesale customers dataset has 440 samples with 6 features each.</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_data_exploration">Data Exploration</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In this section, you will begin exploring the data through visualizations and code to understand how each feature is related to the others. You will observe a statistical description of the dataset, consider the relevance of each feature, and select a few sample data points from the dataset which you will track through the course of this project.</p>
</div>
<div class="paragraph">
<p>Run the code block below to observe a statistical description of the dataset. Note that the dataset is composed of six important product categories: <strong>'Fresh'</strong>, <strong>'Milk'</strong>, <strong>'Grocery'</strong>, <strong>'Frozen'</strong>, <strong>'Detergents_Paper'</strong>, and <strong>'Delicatessen'</strong>. Consider what each category represents in terms of products you could purchase.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Display a description of the dataset
display(data.describe())</code></pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;12000.297727&lt;/td&gt;
      &lt;td&gt;5796.265909&lt;/td&gt;
      &lt;td&gt;7951.277273&lt;/td&gt;
      &lt;td&gt;3071.931818&lt;/td&gt;
      &lt;td&gt;2881.493182&lt;/td&gt;
      &lt;td&gt;1524.870455&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;12647.328865&lt;/td&gt;
      &lt;td&gt;7380.377175&lt;/td&gt;
      &lt;td&gt;9503.162829&lt;/td&gt;
      &lt;td&gt;4854.673333&lt;/td&gt;
      &lt;td&gt;4767.854448&lt;/td&gt;
      &lt;td&gt;2820.105937&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;55.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;3127.750000&lt;/td&gt;
      &lt;td&gt;1533.000000&lt;/td&gt;
      &lt;td&gt;2153.000000&lt;/td&gt;
      &lt;td&gt;742.250000&lt;/td&gt;
      &lt;td&gt;256.750000&lt;/td&gt;
      &lt;td&gt;408.250000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;8504.000000&lt;/td&gt;
      &lt;td&gt;3627.000000&lt;/td&gt;
      &lt;td&gt;4755.500000&lt;/td&gt;
      &lt;td&gt;1526.000000&lt;/td&gt;
      &lt;td&gt;816.500000&lt;/td&gt;
      &lt;td&gt;965.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;16933.750000&lt;/td&gt;
      &lt;td&gt;7190.250000&lt;/td&gt;
      &lt;td&gt;10655.750000&lt;/td&gt;
      &lt;td&gt;3554.250000&lt;/td&gt;
      &lt;td&gt;3922.000000&lt;/td&gt;
      &lt;td&gt;1820.250000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;112151.000000&lt;/td&gt;
      &lt;td&gt;73498.000000&lt;/td&gt;
      &lt;td&gt;92780.000000&lt;/td&gt;
      &lt;td&gt;60869.000000&lt;/td&gt;
      &lt;td&gt;40827.000000&lt;/td&gt;
      &lt;td&gt;47943.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
<div class="sect2">
<h3 id="_implementation_selecting_samples">Implementation: Selecting Samples</h3>
<div class="paragraph">
<p>To get a better understanding of the customers and how their data will transform through the analysis, it would be best to select a few sample data points and explore them in more detail. In the code block below, add <strong>three</strong> indices of your choice to the <code>indices</code> list which will represent the customers to track. It is suggested to try different sets of samples until you obtain customers that vary significantly from one another.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># TODO: Select three indices of your choice you wish to sample from the dataset
indices = [60,220,380]

# Create a DataFrame of the chosen samples
samples = pd.DataFrame(data.loc[indices], columns = data.keys()).reset_index(drop = True)
print "Chosen samples of wholesale customers dataset:"
display(samples)</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>Chosen samples of wholesale customers dataset:</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;8590&lt;/td&gt;
      &lt;td&gt;3045&lt;/td&gt;
      &lt;td&gt;7854&lt;/td&gt;
      &lt;td&gt;96&lt;/td&gt;
      &lt;td&gt;4095&lt;/td&gt;
      &lt;td&gt;225&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;14755&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;1382&lt;/td&gt;
      &lt;td&gt;1765&lt;/td&gt;
      &lt;td&gt;56&lt;/td&gt;
      &lt;td&gt;749&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;28257&lt;/td&gt;
      &lt;td&gt;944&lt;/td&gt;
      &lt;td&gt;2146&lt;/td&gt;
      &lt;td&gt;3881&lt;/td&gt;
      &lt;td&gt;600&lt;/td&gt;
      &lt;td&gt;270&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_1">Question 1</h3>
<div class="paragraph">
<p>Consider the total purchase cost of each product category and the statistical description of the dataset above for your sample customers.
<strong>What kind of establishment (customer) could each of the three samples you&#8217;ve chosen represent?</strong>
<strong>Hint:</strong> Examples of establishments include places like markets, cafes, and retailers, among many others. Avoid using names for establishments, such as saying <strong>"McDonalds"</strong> when describing a sample customer as a restaurant.</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong>
* Customer 0: From the data described above, the customer described spent above average for Detergents_Paper and below average for the rest of categories. We can also see that this establishment does not use a lot of Frozen or Delicatessen products. Its use of Milk and Fresh products is moderate and Grocery products is towards the 75+ percentile. This sounds like a moderate sized retailer.
* Customer 1: In this case, the customer spent above average on Fresh and below average on other categories. The establishment uses relatively low amounts of Milk, Grocery, Detergents_Paper and moderately higher amounts of Frozen and Delicatessan products. This sounds like a restaurant.
* Customer 2: In this case, the customer spent above average on Fresh and Frozen, and below average for the others. They spent relatively low on Milk, Grocery, Delicatessan, moderately on Detergents_Paper and a lot on Fresh and Frozen. This too sounds like a restaurant, although a larger one.</p>
</div>
</div>
<div class="sect2">
<h3 id="_implementation_feature_relevance">Implementation: Feature Relevance</h3>
<div class="paragraph">
<p>One interesting thought to consider is if one (or more) of the six product categories is actually relevant for understanding customer purchasing. That is to say, is it possible to determine whether customers purchasing some amount of one category of products will necessarily purchase some proportional amount of another category of products? We can make this determination quite easily by training a supervised regression learner on a subset of the data with one feature removed, and then score how well that model can predict the removed feature.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Assign <code>new_data</code> a copy of the data by removing a feature of your choice using the <code>DataFrame.drop</code> function.
 - Use <code>sklearn.cross_validation.train_test_split</code> to split the dataset into training and testing sets.
   - Use the removed feature as your target label. Set a <code>test_size</code> of <code>0.25</code> and set a <code>random_state</code>.
 - Import a decision tree regressor, set a <code>random_state</code>, and fit the learner to the training data.
 - Report the prediction score of the testing set using the regressor&#8217;s <code>score</code> function.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># TODO: Make a copy of the DataFrame, using the 'drop' function to drop the given feature
new_data = data.drop(['Grocery'], axis = 1)

from sklearn.cross_validation import train_test_split
# TODO: Split the data into training and testing sets using the given feature as the target
X_train, X_test, y_train, y_test = train_test_split(new_data, data['Grocery'], test_size=0.25, random_state=42)

from sklearn.tree import DecisionTreeRegressor
# TODO: Create a decision tree regressor and fit it to the training set
regressor = DecisionTreeRegressor(random_state=42)
regressor.fit(X_train,y_train)

# TODO: Report the score of the prediction using the testing set
score = regressor.score(X_test,y_test)
print score</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>0.681884008544</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_question_2">Question 2</h3>
<div class="paragraph">
<p><strong>Which feature did you attempt to predict? What was the reported prediction score? Is this feature is necessary for identifying customers' spending habits?</strong>
<strong>Hint:</strong> The coefficient of determination, <code>R^2</code>, is scored between 0 and 1, with 1 being a perfect fit. A negative <code>R^2</code> implies the model fails to fit the data.</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> I tried to predict the Grocery feature based on the others because it seems to me that we often buy groceries with things like milk or detergent (in fact, we could call these products groceries too). The reported prediction score was 0.68. Since this is relatively high score, it means that to some extent this feature can be inferred from the others. Hence, it can be safely dropped without any effect on prediction.</p>
</div>
</div>
<div class="sect2">
<h3 id="_visualize_feature_distributions">Visualize Feature Distributions</h3>
<div class="paragraph">
<p>To get a better understanding of the dataset, we can construct a scatter matrix of each of the six product features present in the data. If you found that the feature you attempted to predict above is relevant for identifying a specific customer, then the scatter matrix below may not show any correlation between that feature and the others. Conversely, if you believe that feature is not relevant for identifying a specific customer, the scatter matrix might show a correlation between that feature and another feature in the data. Run the code block below to produce a scatter matrix.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Produce a scatter matrix for each pair of features in the data
pd.scatter_matrix(data, alpha = 0.3, figsize = (14,8), diagonal = 'kde');</code></pre>
</div>
</div>
<div class="paragraph">
<p>![png](output_15_0.png)</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_3">Question 3</h3>
<div class="paragraph">
<p><strong>Are there any pairs of features which exhibit some degree of correlation? Does this confirm or deny your suspicions about the relevance of the feature you attempted to predict? How is the data for those features distributed?</strong>
<strong>Hint:</strong> Is the data normally distributed? Where do most of the data points lie?</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> Yes, from the plots Grocery-Detergents_Paper Milk-Detergents_Paper and Grocery-Milk have some correlation. It confirms my hunch that Grocery feature could be inferred from the other two features. From the graphs, it is clear that most of the data is skewed to the left(smaller values) and the distributions for the two features Milk and Detergents_Paper are similar in shape.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_data_preprocessing">Data Preprocessing</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In this section, you will preprocess the data to create a better representation of customers by performing a scaling on the data and detecting (and optionally removing) outliers. Preprocessing data is often times a critical step in assuring that results you obtain from your analysis are significant and meaningful.</p>
</div>
<div class="sect2">
<h3 id="_implementation_feature_scaling">Implementation: Feature Scaling</h3>
<div class="paragraph">
<p>If data is not normally distributed, especially if the mean and median vary significantly (indicating a large skew), it is most [often appropriate](<a href="http://econbrowser.com/archives/2014/02/use-of-logarithms-in-economics" class="bare">http://econbrowser.com/archives/2014/02/use-of-logarithms-in-economics</a>) to apply a non-linear scaling â€” particularly for financial data. One way to achieve this scaling is by using a [Box-Cox test](<a href="http://scipy.github.io/devdocs/generated/scipy.stats.boxcox.html" class="bare">http://scipy.github.io/devdocs/generated/scipy.stats.boxcox.html</a>), which calculates the best power transformation of the data that reduces skewness. A simpler approach which can work in most cases would be applying the natural logarithm.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Assign a copy of the data to <code>log_data</code> after applying logarithmic scaling. Use the <code>np.log</code> function for this.
 - Assign a copy of the sample data to <code>log_samples</code> after applying logarithmic scaling. Again, use <code>np.log</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># TODO: Scale the data using the natural logarithm
log_data = np.log(data)

# TODO: Scale the sample data using the natural logarithm
log_samples = np.log(samples)

# Produce a scatter matrix for each pair of newly-transformed features
pd.scatter_matrix(log_data, alpha = 0.3, figsize = (14,8), diagonal = 'kde');</code></pre>
</div>
</div>
<div class="paragraph">
<p>![png](output_20_0.png)</p>
</div>
</div>
<div class="sect2">
<h3 id="_observation">Observation</h3>
<div class="paragraph">
<p>After applying a natural logarithm scaling to the data, the distribution of each feature should appear much more normal. For any pairs of features you may have identified earlier as being correlated, observe here whether that correlation is still present (and whether it is now stronger or weaker than before).</p>
</div>
<div class="paragraph">
<p>Run the code below to see how the sample data has changed after having the natural logarithm applied to it.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Display the log-transformed sample data
display(log_samples)</code></pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;9.058354&lt;/td&gt;
      &lt;td&gt;8.021256&lt;/td&gt;
      &lt;td&gt;8.968778&lt;/td&gt;
      &lt;td&gt;4.564348&lt;/td&gt;
      &lt;td&gt;8.317522&lt;/td&gt;
      &lt;td&gt;5.416100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;9.599337&lt;/td&gt;
      &lt;td&gt;6.801283&lt;/td&gt;
      &lt;td&gt;7.231287&lt;/td&gt;
      &lt;td&gt;7.475906&lt;/td&gt;
      &lt;td&gt;4.025352&lt;/td&gt;
      &lt;td&gt;6.618739&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;10.249096&lt;/td&gt;
      &lt;td&gt;6.850126&lt;/td&gt;
      &lt;td&gt;7.671361&lt;/td&gt;
      &lt;td&gt;8.263848&lt;/td&gt;
      &lt;td&gt;6.396930&lt;/td&gt;
      &lt;td&gt;5.598422&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
</div>
<div class="sect2">
<h3 id="_implementation_outlier_detection">Implementation: Outlier Detection</h3>
<div class="paragraph">
<p>Detecting outliers in the data is extremely important in the data preprocessing step of any analysis. The presence of outliers can often skew results which take into consideration these data points. There are many "rules of thumb" for what constitutes an outlier in a dataset. Here, we will use [Tukey&#8217;s Method for identfying outliers](<a href="http://datapigtechnologies.com/blog/index.php/highlighting-outliers-in-your-data-with-the-tukey-method/" class="bare">http://datapigtechnologies.com/blog/index.php/highlighting-outliers-in-your-data-with-the-tukey-method/</a>): An <strong>outlier step</strong> is calculated as 1.5 times the interquartile range (IQR). A data point with a feature that is beyond an outlier step outside of the IQR for that feature is considered abnormal.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Assign the value of the 25th percentile for the given feature to <code>Q1</code>. Use <code>np.percentile</code> for this.
 - Assign the value of the 75th percentile for the given feature to <code>Q3</code>. Again, use <code>np.percentile</code>.
 - Assign the calculation of an outlier step for the given feature to <code>step</code>.
 - Optionally remove data points from the dataset by adding indices to the <code>outliers</code> list.</p>
</div>
<div class="paragraph">
<p><strong>NOTE:</strong> If you choose to remove any outliers, ensure that the sample data does not contain any of these points!
Once you have performed this implementation, the dataset will be stored in the variable <code>good_data</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># For each feature find the data points with extreme high or low values
for feature in log_data.keys():

    # TODO: Calculate Q1 (25th percentile of the data) for the given feature
    Q1 = np.percentile(log_data[feature],25)

    # TODO: Calculate Q3 (75th percentile of the data) for the given feature
    Q3 = np.percentile(log_data[feature],75)

    # TODO: Use the interquartile range to calculate an outlier step (1.5 times the interquartile range)
    step = 1.5*(Q3-Q1)

    # Display the outliers
    print "Data points considered outliers for the feature '{}':".format(feature)
    display(log_data[~((log_data[feature] &gt;= Q1 - step) &amp; (log_data[feature] &lt;= Q3 + step))])

# OPTIONAL: Select the indices for data points you wish to remove
outliers  = [65,66,128,154,75]

# Remove the outliers, if any were specified
good_data = log_data.drop(log_data.index[outliers]).reset_index(drop = True)</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>Data points considered outliers for the feature 'Fresh':</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;65&lt;/th&gt;
      &lt;td&gt;4.442651&lt;/td&gt;
      &lt;td&gt;9.950323&lt;/td&gt;
      &lt;td&gt;10.732651&lt;/td&gt;
      &lt;td&gt;3.583519&lt;/td&gt;
      &lt;td&gt;10.095388&lt;/td&gt;
      &lt;td&gt;7.260523&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;66&lt;/th&gt;
      &lt;td&gt;2.197225&lt;/td&gt;
      &lt;td&gt;7.335634&lt;/td&gt;
      &lt;td&gt;8.911530&lt;/td&gt;
      &lt;td&gt;5.164786&lt;/td&gt;
      &lt;td&gt;8.151333&lt;/td&gt;
      &lt;td&gt;3.295837&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;81&lt;/th&gt;
      &lt;td&gt;5.389072&lt;/td&gt;
      &lt;td&gt;9.163249&lt;/td&gt;
      &lt;td&gt;9.575192&lt;/td&gt;
      &lt;td&gt;5.645447&lt;/td&gt;
      &lt;td&gt;8.964184&lt;/td&gt;
      &lt;td&gt;5.049856&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;95&lt;/th&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;7.979339&lt;/td&gt;
      &lt;td&gt;8.740657&lt;/td&gt;
      &lt;td&gt;6.086775&lt;/td&gt;
      &lt;td&gt;5.407172&lt;/td&gt;
      &lt;td&gt;6.563856&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;96&lt;/th&gt;
      &lt;td&gt;3.135494&lt;/td&gt;
      &lt;td&gt;7.869402&lt;/td&gt;
      &lt;td&gt;9.001839&lt;/td&gt;
      &lt;td&gt;4.976734&lt;/td&gt;
      &lt;td&gt;8.262043&lt;/td&gt;
      &lt;td&gt;5.379897&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;128&lt;/th&gt;
      &lt;td&gt;4.941642&lt;/td&gt;
      &lt;td&gt;9.087834&lt;/td&gt;
      &lt;td&gt;8.248791&lt;/td&gt;
      &lt;td&gt;4.955827&lt;/td&gt;
      &lt;td&gt;6.967909&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;171&lt;/th&gt;
      &lt;td&gt;5.298317&lt;/td&gt;
      &lt;td&gt;10.160530&lt;/td&gt;
      &lt;td&gt;9.894245&lt;/td&gt;
      &lt;td&gt;6.478510&lt;/td&gt;
      &lt;td&gt;9.079434&lt;/td&gt;
      &lt;td&gt;8.740337&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;193&lt;/th&gt;
      &lt;td&gt;5.192957&lt;/td&gt;
      &lt;td&gt;8.156223&lt;/td&gt;
      &lt;td&gt;9.917982&lt;/td&gt;
      &lt;td&gt;6.865891&lt;/td&gt;
      &lt;td&gt;8.633731&lt;/td&gt;
      &lt;td&gt;6.501290&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;218&lt;/th&gt;
      &lt;td&gt;2.890372&lt;/td&gt;
      &lt;td&gt;8.923191&lt;/td&gt;
      &lt;td&gt;9.629380&lt;/td&gt;
      &lt;td&gt;7.158514&lt;/td&gt;
      &lt;td&gt;8.475746&lt;/td&gt;
      &lt;td&gt;8.759669&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;304&lt;/th&gt;
      &lt;td&gt;5.081404&lt;/td&gt;
      &lt;td&gt;8.917311&lt;/td&gt;
      &lt;td&gt;10.117510&lt;/td&gt;
      &lt;td&gt;6.424869&lt;/td&gt;
      &lt;td&gt;9.374413&lt;/td&gt;
      &lt;td&gt;7.787382&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;305&lt;/th&gt;
      &lt;td&gt;5.493061&lt;/td&gt;
      &lt;td&gt;9.468001&lt;/td&gt;
      &lt;td&gt;9.088399&lt;/td&gt;
      &lt;td&gt;6.683361&lt;/td&gt;
      &lt;td&gt;8.271037&lt;/td&gt;
      &lt;td&gt;5.351858&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;338&lt;/th&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;5.808142&lt;/td&gt;
      &lt;td&gt;8.856661&lt;/td&gt;
      &lt;td&gt;9.655090&lt;/td&gt;
      &lt;td&gt;2.708050&lt;/td&gt;
      &lt;td&gt;6.309918&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;353&lt;/th&gt;
      &lt;td&gt;4.762174&lt;/td&gt;
      &lt;td&gt;8.742574&lt;/td&gt;
      &lt;td&gt;9.961898&lt;/td&gt;
      &lt;td&gt;5.429346&lt;/td&gt;
      &lt;td&gt;9.069007&lt;/td&gt;
      &lt;td&gt;7.013016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;355&lt;/th&gt;
      &lt;td&gt;5.247024&lt;/td&gt;
      &lt;td&gt;6.588926&lt;/td&gt;
      &lt;td&gt;7.606885&lt;/td&gt;
      &lt;td&gt;5.501258&lt;/td&gt;
      &lt;td&gt;5.214936&lt;/td&gt;
      &lt;td&gt;4.844187&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;357&lt;/th&gt;
      &lt;td&gt;3.610918&lt;/td&gt;
      &lt;td&gt;7.150701&lt;/td&gt;
      &lt;td&gt;10.011086&lt;/td&gt;
      &lt;td&gt;4.919981&lt;/td&gt;
      &lt;td&gt;8.816853&lt;/td&gt;
      &lt;td&gt;4.700480&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;412&lt;/th&gt;
      &lt;td&gt;4.574711&lt;/td&gt;
      &lt;td&gt;8.190077&lt;/td&gt;
      &lt;td&gt;9.425452&lt;/td&gt;
      &lt;td&gt;4.584967&lt;/td&gt;
      &lt;td&gt;7.996317&lt;/td&gt;
      &lt;td&gt;4.127134&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
<div class="literalblock">
<div class="content">
<pre>Data points considered outliers for the feature 'Milk':</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;86&lt;/th&gt;
      &lt;td&gt;10.039983&lt;/td&gt;
      &lt;td&gt;11.205013&lt;/td&gt;
      &lt;td&gt;10.377047&lt;/td&gt;
      &lt;td&gt;6.894670&lt;/td&gt;
      &lt;td&gt;9.906981&lt;/td&gt;
      &lt;td&gt;6.805723&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;98&lt;/th&gt;
      &lt;td&gt;6.220590&lt;/td&gt;
      &lt;td&gt;4.718499&lt;/td&gt;
      &lt;td&gt;6.656727&lt;/td&gt;
      &lt;td&gt;6.796824&lt;/td&gt;
      &lt;td&gt;4.025352&lt;/td&gt;
      &lt;td&gt;4.882802&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;154&lt;/th&gt;
      &lt;td&gt;6.432940&lt;/td&gt;
      &lt;td&gt;4.007333&lt;/td&gt;
      &lt;td&gt;4.919981&lt;/td&gt;
      &lt;td&gt;4.317488&lt;/td&gt;
      &lt;td&gt;1.945910&lt;/td&gt;
      &lt;td&gt;2.079442&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;356&lt;/th&gt;
      &lt;td&gt;10.029503&lt;/td&gt;
      &lt;td&gt;4.897840&lt;/td&gt;
      &lt;td&gt;5.384495&lt;/td&gt;
      &lt;td&gt;8.057377&lt;/td&gt;
      &lt;td&gt;2.197225&lt;/td&gt;
      &lt;td&gt;6.306275&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
<div class="literalblock">
<div class="content">
<pre>Data points considered outliers for the feature 'Grocery':</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;75&lt;/th&gt;
      &lt;td&gt;9.923192&lt;/td&gt;
      &lt;td&gt;7.036148&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;8.390949&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;6.882437&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;154&lt;/th&gt;
      &lt;td&gt;6.432940&lt;/td&gt;
      &lt;td&gt;4.007333&lt;/td&gt;
      &lt;td&gt;4.919981&lt;/td&gt;
      &lt;td&gt;4.317488&lt;/td&gt;
      &lt;td&gt;1.945910&lt;/td&gt;
      &lt;td&gt;2.079442&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
<div class="literalblock">
<div class="content">
<pre>Data points considered outliers for the feature 'Frozen':</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;38&lt;/th&gt;
      &lt;td&gt;8.431853&lt;/td&gt;
      &lt;td&gt;9.663261&lt;/td&gt;
      &lt;td&gt;9.723703&lt;/td&gt;
      &lt;td&gt;3.496508&lt;/td&gt;
      &lt;td&gt;8.847360&lt;/td&gt;
      &lt;td&gt;6.070738&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;57&lt;/th&gt;
      &lt;td&gt;8.597297&lt;/td&gt;
      &lt;td&gt;9.203618&lt;/td&gt;
      &lt;td&gt;9.257892&lt;/td&gt;
      &lt;td&gt;3.637586&lt;/td&gt;
      &lt;td&gt;8.932213&lt;/td&gt;
      &lt;td&gt;7.156177&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;65&lt;/th&gt;
      &lt;td&gt;4.442651&lt;/td&gt;
      &lt;td&gt;9.950323&lt;/td&gt;
      &lt;td&gt;10.732651&lt;/td&gt;
      &lt;td&gt;3.583519&lt;/td&gt;
      &lt;td&gt;10.095388&lt;/td&gt;
      &lt;td&gt;7.260523&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;145&lt;/th&gt;
      &lt;td&gt;10.000569&lt;/td&gt;
      &lt;td&gt;9.034080&lt;/td&gt;
      &lt;td&gt;10.457143&lt;/td&gt;
      &lt;td&gt;3.737670&lt;/td&gt;
      &lt;td&gt;9.440738&lt;/td&gt;
      &lt;td&gt;8.396155&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;175&lt;/th&gt;
      &lt;td&gt;7.759187&lt;/td&gt;
      &lt;td&gt;8.967632&lt;/td&gt;
      &lt;td&gt;9.382106&lt;/td&gt;
      &lt;td&gt;3.951244&lt;/td&gt;
      &lt;td&gt;8.341887&lt;/td&gt;
      &lt;td&gt;7.436617&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;264&lt;/th&gt;
      &lt;td&gt;6.978214&lt;/td&gt;
      &lt;td&gt;9.177714&lt;/td&gt;
      &lt;td&gt;9.645041&lt;/td&gt;
      &lt;td&gt;4.110874&lt;/td&gt;
      &lt;td&gt;8.696176&lt;/td&gt;
      &lt;td&gt;7.142827&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;325&lt;/th&gt;
      &lt;td&gt;10.395650&lt;/td&gt;
      &lt;td&gt;9.728181&lt;/td&gt;
      &lt;td&gt;9.519735&lt;/td&gt;
      &lt;td&gt;11.016479&lt;/td&gt;
      &lt;td&gt;7.148346&lt;/td&gt;
      &lt;td&gt;8.632128&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;420&lt;/th&gt;
      &lt;td&gt;8.402007&lt;/td&gt;
      &lt;td&gt;8.569026&lt;/td&gt;
      &lt;td&gt;9.490015&lt;/td&gt;
      &lt;td&gt;3.218876&lt;/td&gt;
      &lt;td&gt;8.827321&lt;/td&gt;
      &lt;td&gt;7.239215&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;429&lt;/th&gt;
      &lt;td&gt;9.060331&lt;/td&gt;
      &lt;td&gt;7.467371&lt;/td&gt;
      &lt;td&gt;8.183118&lt;/td&gt;
      &lt;td&gt;3.850148&lt;/td&gt;
      &lt;td&gt;4.430817&lt;/td&gt;
      &lt;td&gt;7.824446&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;439&lt;/th&gt;
      &lt;td&gt;7.932721&lt;/td&gt;
      &lt;td&gt;7.437206&lt;/td&gt;
      &lt;td&gt;7.828038&lt;/td&gt;
      &lt;td&gt;4.174387&lt;/td&gt;
      &lt;td&gt;6.167516&lt;/td&gt;
      &lt;td&gt;3.951244&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
<div class="literalblock">
<div class="content">
<pre>Data points considered outliers for the feature 'Detergents_Paper':</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;75&lt;/th&gt;
      &lt;td&gt;9.923192&lt;/td&gt;
      &lt;td&gt;7.036148&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;8.390949&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;6.882437&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;161&lt;/th&gt;
      &lt;td&gt;9.428190&lt;/td&gt;
      &lt;td&gt;6.291569&lt;/td&gt;
      &lt;td&gt;5.645447&lt;/td&gt;
      &lt;td&gt;6.995766&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
      &lt;td&gt;7.711101&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
<div class="literalblock">
<div class="content">
<pre>Data points considered outliers for the feature 'Delicatessen':</pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;66&lt;/th&gt;
      &lt;td&gt;2.197225&lt;/td&gt;
      &lt;td&gt;7.335634&lt;/td&gt;
      &lt;td&gt;8.911530&lt;/td&gt;
      &lt;td&gt;5.164786&lt;/td&gt;
      &lt;td&gt;8.151333&lt;/td&gt;
      &lt;td&gt;3.295837&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;109&lt;/th&gt;
      &lt;td&gt;7.248504&lt;/td&gt;
      &lt;td&gt;9.724899&lt;/td&gt;
      &lt;td&gt;10.274568&lt;/td&gt;
      &lt;td&gt;6.511745&lt;/td&gt;
      &lt;td&gt;6.728629&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;128&lt;/th&gt;
      &lt;td&gt;4.941642&lt;/td&gt;
      &lt;td&gt;9.087834&lt;/td&gt;
      &lt;td&gt;8.248791&lt;/td&gt;
      &lt;td&gt;4.955827&lt;/td&gt;
      &lt;td&gt;6.967909&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;137&lt;/th&gt;
      &lt;td&gt;8.034955&lt;/td&gt;
      &lt;td&gt;8.997147&lt;/td&gt;
      &lt;td&gt;9.021840&lt;/td&gt;
      &lt;td&gt;6.493754&lt;/td&gt;
      &lt;td&gt;6.580639&lt;/td&gt;
      &lt;td&gt;3.583519&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;142&lt;/th&gt;
      &lt;td&gt;10.519646&lt;/td&gt;
      &lt;td&gt;8.875147&lt;/td&gt;
      &lt;td&gt;9.018332&lt;/td&gt;
      &lt;td&gt;8.004700&lt;/td&gt;
      &lt;td&gt;2.995732&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;154&lt;/th&gt;
      &lt;td&gt;6.432940&lt;/td&gt;
      &lt;td&gt;4.007333&lt;/td&gt;
      &lt;td&gt;4.919981&lt;/td&gt;
      &lt;td&gt;4.317488&lt;/td&gt;
      &lt;td&gt;1.945910&lt;/td&gt;
      &lt;td&gt;2.079442&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;183&lt;/th&gt;
      &lt;td&gt;10.514529&lt;/td&gt;
      &lt;td&gt;10.690808&lt;/td&gt;
      &lt;td&gt;9.911952&lt;/td&gt;
      &lt;td&gt;10.505999&lt;/td&gt;
      &lt;td&gt;5.476464&lt;/td&gt;
      &lt;td&gt;10.777768&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;184&lt;/th&gt;
      &lt;td&gt;5.789960&lt;/td&gt;
      &lt;td&gt;6.822197&lt;/td&gt;
      &lt;td&gt;8.457443&lt;/td&gt;
      &lt;td&gt;4.304065&lt;/td&gt;
      &lt;td&gt;5.811141&lt;/td&gt;
      &lt;td&gt;2.397895&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;187&lt;/th&gt;
      &lt;td&gt;7.798933&lt;/td&gt;
      &lt;td&gt;8.987447&lt;/td&gt;
      &lt;td&gt;9.192075&lt;/td&gt;
      &lt;td&gt;8.743372&lt;/td&gt;
      &lt;td&gt;8.148735&lt;/td&gt;
      &lt;td&gt;1.098612&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;203&lt;/th&gt;
      &lt;td&gt;6.368187&lt;/td&gt;
      &lt;td&gt;6.529419&lt;/td&gt;
      &lt;td&gt;7.703459&lt;/td&gt;
      &lt;td&gt;6.150603&lt;/td&gt;
      &lt;td&gt;6.860664&lt;/td&gt;
      &lt;td&gt;2.890372&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;233&lt;/th&gt;
      &lt;td&gt;6.871091&lt;/td&gt;
      &lt;td&gt;8.513988&lt;/td&gt;
      &lt;td&gt;8.106515&lt;/td&gt;
      &lt;td&gt;6.842683&lt;/td&gt;
      &lt;td&gt;6.013715&lt;/td&gt;
      &lt;td&gt;1.945910&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;285&lt;/th&gt;
      &lt;td&gt;10.602965&lt;/td&gt;
      &lt;td&gt;6.461468&lt;/td&gt;
      &lt;td&gt;8.188689&lt;/td&gt;
      &lt;td&gt;6.948897&lt;/td&gt;
      &lt;td&gt;6.077642&lt;/td&gt;
      &lt;td&gt;2.890372&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;289&lt;/th&gt;
      &lt;td&gt;10.663966&lt;/td&gt;
      &lt;td&gt;5.655992&lt;/td&gt;
      &lt;td&gt;6.154858&lt;/td&gt;
      &lt;td&gt;7.235619&lt;/td&gt;
      &lt;td&gt;3.465736&lt;/td&gt;
      &lt;td&gt;3.091042&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;343&lt;/th&gt;
      &lt;td&gt;7.431892&lt;/td&gt;
      &lt;td&gt;8.848509&lt;/td&gt;
      &lt;td&gt;10.177932&lt;/td&gt;
      &lt;td&gt;7.283448&lt;/td&gt;
      &lt;td&gt;9.646593&lt;/td&gt;
      &lt;td&gt;3.610918&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_4">Question 4</h3>
<div class="paragraph">
<p><strong>Are there any data points considered outliers for more than one feature based on the definition above? Should these data points be removed from the dataset? If any data points were added to the <code>outliers</code> list to be removed, explain why.</strong></p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> The following indices are outliers for more than one feature - 65,66,128,154,75. It makes sense to remove these data points since outliers will affect clustering methods like k-means. This is because k-means depends on locating centroids which will be distorted by the outliers.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_feature_transformation">Feature Transformation</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In this section you will use principal component analysis (PCA) to draw conclusions about the underlying structure of the wholesale customer data. Since using PCA on a dataset calculates the dimensions which best maximize variance, we will find which compound combinations of features best describe customers.</p>
</div>
<div class="sect2">
<h3 id="_implementation_pca">Implementation: PCA</h3>
<div class="paragraph">
<p>Now that the data has been scaled to a more normal distribution and has had any necessary outliers removed, we can now apply PCA to the <code>good_data</code> to discover which dimensions about the data best maximize the variance of features involved. In addition to finding these dimensions, PCA will also report the <strong>explained variance ratio</strong> of each dimension â€” how much variance within the data is explained by that dimension alone. Note that a component (dimension) from PCA can be considered a new "feature" of the space, however it is a composition of the original features present in the data.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Import <code>sklearn.decomposition.PCA</code> and assign the results of fitting PCA in six dimensions with <code>good_data</code> to <code>pca</code>.
 - Apply a PCA transformation of <code>log_samples</code> using <code>pca.transform</code>, and assign the results to <code>pca_samples</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python">from sklearn.decomposition import PCA
# TODO: Apply PCA by fitting the good data with the same number of dimensions as features
pca = PCA()
pca.fit(good_data)

# TODO: Transform log_samples using the PCA fit above
pca_samples = pca.transform(log_samples)

# Generate PCA results plot
pca_results = vs.pca_results(good_data, pca)</code></pre>
</div>
</div>
<div class="paragraph">
<p>![png](output_29_0.png)</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_5">Question 5</h3>
<div class="paragraph">
<p><strong>How much variance in the data is explained</strong> <strong><strong>in total</strong></strong> <strong>by the first and second principal component? What about the first four principal components? Using the visualization provided above, discuss what the first four dimensions best represent in terms of customer spending.</strong>
<strong>Hint:</strong> A positive increase in a specific dimension corresponds with an <strong>increase</strong> of the <strong>positive-weighted</strong> features and a <strong>decrease</strong> of the <strong>negative-weighted</strong> features. The rate of increase or decrease is based on the indivdual feature weights.</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> The total variance explained by first and second principal components is 0.4430+0.2638 = 0.7068. The variance explained by the first four components is 0.9311.</p>
</div>
<div class="paragraph">
<p>Each of these components projects spending patterns that capture a certain type of customer. For instance, in the first principal component, the high positive weight on milk, grocery and detergents_paper look like the spending patterns of a retail store. Likewise, the second component seems to have high weights on fresh, frozen and delicatessen products with positive weights on the other categories. This looks like the spending pattern of a restaurant. The third component has a high positive weight on Delicatessen and Frozen products. This looks like a store selling deli products. Finally, the fourth component has a very high positive weight on Frozen products with smaller weights on Detergents_Paper,Grocery and Milk products. This looks like Frozen meat store.</p>
</div>
</div>
<div class="sect2">
<h3 id="_observation_2">Observation</h3>
<div class="paragraph">
<p>Run the code below to see how the log-transformed sample data has changed after having a PCA transformation applied to it in six dimensions. Observe the numerical value for the first four dimensions of the sample points. Consider if this is consistent with your initial interpretation of the sample points.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Display sample log-data after having a PCA transformation applied
display(pd.DataFrame(np.round(pca_samples, 4), columns = pca_results.index.values))</code></pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Dimension 1&lt;/th&gt;
      &lt;th&gt;Dimension 2&lt;/th&gt;
      &lt;th&gt;Dimension 3&lt;/th&gt;
      &lt;th&gt;Dimension 4&lt;/th&gt;
      &lt;th&gt;Dimension 5&lt;/th&gt;
      &lt;th&gt;Dimension 6&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1.5723&lt;/td&gt;
      &lt;td&gt;-1.7307&lt;/td&gt;
      &lt;td&gt;-2.2063&lt;/td&gt;
      &lt;td&gt;-1.1891&lt;/td&gt;
      &lt;td&gt;0.3859&lt;/td&gt;
      &lt;td&gt;-0.1247&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;-3.3331&lt;/td&gt;
      &lt;td&gt;0.1830&lt;/td&gt;
      &lt;td&gt;-0.0061&lt;/td&gt;
      &lt;td&gt;-0.6771&lt;/td&gt;
      &lt;td&gt;-0.1655&lt;/td&gt;
      &lt;td&gt;-0.2403&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;-1.7408&lt;/td&gt;
      &lt;td&gt;0.6588&lt;/td&gt;
      &lt;td&gt;-1.3480&lt;/td&gt;
      &lt;td&gt;0.8847&lt;/td&gt;
      &lt;td&gt;0.7810&lt;/td&gt;
      &lt;td&gt;-0.1574&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
</div>
<div class="sect2">
<h3 id="_implementation_dimensionality_reduction">Implementation: Dimensionality Reduction</h3>
<div class="paragraph">
<p>When using principal component analysis, one of the main goals is to reduce the dimensionality of the data â€” in effect, reducing the complexity of the problem. Dimensionality reduction comes at a cost: Fewer dimensions used implies less of the total variance in the data is being explained. Because of this, the <strong>cumulative explained variance ratio</strong> is extremely important for knowing how many dimensions are necessary for the problem. Additionally, if a signifiant amount of variance is explained by only two or three dimensions, the reduced data can be visualized afterwards.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Assign the results of fitting PCA in two dimensions with <code>good_data</code> to <code>pca</code>.
 - Apply a PCA transformation of <code>good_data</code> using <code>pca.transform</code>, and assign the results to <code>reduced_data</code>.
 - Apply a PCA transformation of <code>log_samples</code> using <code>pca.transform</code>, and assign the results to <code>pca_samples</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># TODO: Apply PCA by fitting the good data with only two dimensions
pca = PCA(n_components=2)
pca.fit(good_data)

# TODO: Transform the good data using the PCA fit above
reduced_data = pca.transform(good_data)

# TODO: Transform log_samples using the PCA fit above
pca_samples = pca.transform(log_samples)

# Create a DataFrame for the reduced data
reduced_data = pd.DataFrame(reduced_data, columns = ['Dimension 1', 'Dimension 2'])</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_observation_3">Observation</h3>
<div class="paragraph">
<p>Run the code below to see how the log-transformed sample data has changed after having a PCA transformation applied to it using only two dimensions. Observe how the values for the first two dimensions remains unchanged when compared to a PCA transformation in six dimensions.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Display sample log-data after applying PCA transformation in two dimensions
display(pd.DataFrame(np.round(pca_samples, 4), columns = ['Dimension 1', 'Dimension 2']))</code></pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Dimension 1&lt;/th&gt;
      &lt;th&gt;Dimension 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1.5723&lt;/td&gt;
      &lt;td&gt;-1.7307&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;-3.3331&lt;/td&gt;
      &lt;td&gt;0.1830&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;-1.7408&lt;/td&gt;
      &lt;td&gt;0.6588&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_visualizing_a_biplot">Visualizing a Biplot</h2>
<div class="sectionbody">
<div class="paragraph">
<p>A biplot is a scatterplot where each data point is represented by its scores along the principal components. The axes are the principal components (in this case <code>Dimension 1</code> and <code>Dimension 2</code>). In addition, the biplot shows the projection of the original features along the components. A biplot can help us interpret the reduced dimensions of the data, and discover relationships between the principal components and original features.</p>
</div>
<div class="paragraph">
<p>Run the code cell below to produce a biplot of the reduced-dimension data.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Create a biplot
vs.biplot(good_data, reduced_data, pca)</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0xda14a20&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>![png](output_39_1.png)</p>
</div>
<div class="sect2">
<h3 id="_observation_4">Observation</h3>
<div class="paragraph">
<p>Once we have the original feature projections (in red), it is easier to interpret the relative position of each data point in the scatterplot. For instance, a point the lower right corner of the figure will likely correspond to a customer that spends a lot on <code>'Milk'</code>, <code>'Grocery'</code> and <code>'Detergents_Paper'</code>, but not so much on the other product categories.</p>
</div>
<div class="paragraph">
<p>From the biplot, which of the original features are most strongly correlated with the first component? What about those that are associated with the second component? Do these observations agree with the pca_results plot you obtained earlier?</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_clustering">Clustering</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In this section, you will choose to use either a K-Means clustering algorithm or a Gaussian Mixture Model clustering algorithm to identify the various customer segments hidden in the data. You will then recover specific data points from the clusters to understand their significance by transforming them back into their original dimension and scale.</p>
</div>
<div class="sect2">
<h3 id="_question_6">Question 6</h3>
<div class="paragraph">
<p><strong>What are the advantages to using a K-Means clustering algorithm? What are the advantages to using a Gaussian Mixture Model clustering algorithm? Given your observations about the wholesale customer data so far, which of the two algorithms will you use and why?</strong></p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> K-means can be considered as a constrained or "simpler" form of Gaussian Mixture Clustering. It is easier to implement and practically returns reasonable clustering especially when the clusters are spherical with even density. However, k-means implements "hard clustering", i.e., every data point must belong to one cluster or another.</p>
</div>
<div class="paragraph">
<p>Alternatively, Gaussian Mixture model Clustering implements "soft clustering" where each data point is said to belong to a cluster with a certain probability(confidence). This is a form of Expectation-Maximization Algorithm.</p>
</div>
<div class="paragraph">
<p>K-means would provide some advantage in terms of scalability, but since this dataset is not too big, I would go with Gaussian Mixture Model clustering because I believe it will provide a more meaningful representation of the data.</p>
</div>
</div>
<div class="sect2">
<h3 id="_implementation_creating_clusters">Implementation: Creating Clusters</h3>
<div class="paragraph">
<p>Depending on the problem, the number of clusters that you expect to be in the data may already be known. When the number of clusters is not known <strong>a priori</strong>, there is no guarantee that a given number of clusters best segments the data, since it is unclear what structure exists in the data â€” if any. However, we can quantify the "goodness" of a clustering by calculating each data point&#8217;s <strong>silhouette coefficient</strong>. The [silhouette coefficient](<a href="http://scikit-learn.org/stable/modules/generated/sklearn.metrics.silhouette_score.html" class="bare">http://scikit-learn.org/stable/modules/generated/sklearn.metrics.silhouette_score.html</a>) for a data point measures how similar it is to its assigned cluster from -1 (dissimilar) to 1 (similar). Calculating the <strong>mean</strong> silhouette coefficient provides for a simple scoring method of a given clustering.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Fit a clustering algorithm to the <code>reduced_data</code> and assign it to <code>clusterer</code>.
 - Predict the cluster for each data point in <code>reduced_data</code> using <code>clusterer.predict</code> and assign them to <code>preds</code>.
 - Find the cluster centers using the algorithm&#8217;s respective attribute and assign them to <code>centers</code>.
 - Predict the cluster for each sample data point in <code>pca_samples</code> and assign them <code>sample_preds</code>.
 - Import <code>sklearn.metrics.silhouette_score</code> and calculate the silhouette score of <code>reduced_data</code> against <code>preds</code>.
   - Assign the silhouette score to <code>score</code> and print the result.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python">from sklearn.mixture import GMM
from sklearn.metrics import silhouette_score

def GMMcluster(n_clusters):
    # TODO: Apply your clustering algorithm of choice to the reduced data
    clusterer = GMM(n_components=n_clusters, covariance_type='full', random_state=42).fit(reduced_data)

    # TODO: Predict the cluster for each data point
    preds = clusterer.predict(reduced_data)

    # TODO: Find the cluster centers
    centers = clusterer.means_

    # TODO: Predict the cluster for each transformed sample data point
    sample_preds = clusterer.predict(pca_samples)

    # TODO: Calculate the mean silhouette coefficient for the number of clusters chosen
    score = silhouette_score(reduced_data,preds)

    print("Number of clusters = {} , Silhoutte Score: {}".format(n_clusters, score))

for n_clusters in range(2,16):
    GMMcluster(n_clusters)</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>Number of clusters = 2 , Silhoutte Score: 0.41174985628
Number of clusters = 3 , Silhoutte Score: 0.398431881066
Number of clusters = 4 , Silhoutte Score: 0.289413783858
Number of clusters = 5 , Silhoutte Score: 0.191037489429
Number of clusters = 6 , Silhoutte Score: 0.296321087791
Number of clusters = 7 , Silhoutte Score: 0.310556696486
Number of clusters = 8 , Silhoutte Score: 0.206249919416
Number of clusters = 9 , Silhoutte Score: 0.178273547341
Number of clusters = 10 , Silhoutte Score: 0.184488673273
Number of clusters = 11 , Silhoutte Score: 0.15932320599
Number of clusters = 12 , Silhoutte Score: 0.127949888801
Number of clusters = 13 , Silhoutte Score: 0.112303539662
Number of clusters = 14 , Silhoutte Score: 0.134160709447
Number of clusters = 15 , Silhoutte Score: 0.107640956375</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_question_7">Question 7</h3>
<div class="paragraph">
<p><strong>Report the silhouette score for several cluster numbers you tried. Of these, which number of clusters has the best silhouette score?</strong></p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> The silhouette scores are printed above. Number of clusters = 2 has the best silhouette score (higher score is better).</p>
</div>
</div>
<div class="sect2">
<h3 id="_cluster_visualization">Cluster Visualization</h3>
<div class="paragraph">
<p>Once you&#8217;ve chosen the optimal number of clusters for your clustering algorithm using the scoring metric above, you can now visualize the results by executing the code block below. Note that, for experimentation purposes, you are welcome to adjust the number of clusters for your clustering algorithm to see various visualizations. The final visualization provided should, however, correspond with the optimal number of clusters.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python">#Optimal n_clusters implementation
clusterer = GMM(n_components=2, covariance_type='full', random_state=42).fit(reduced_data)
preds = clusterer.predict(reduced_data)
centers = clusterer.means_
sample_preds = clusterer.predict(pca_samples)


# Display the results of the clustering from implementation
vs.cluster_results(reduced_data, preds, centers, pca_samples)</code></pre>
</div>
</div>
<div class="paragraph">
<p>![png](output_49_0.png)</p>
</div>
</div>
<div class="sect2">
<h3 id="_implementation_data_recovery">Implementation: Data Recovery</h3>
<div class="paragraph">
<p>Each cluster present in the visualization above has a central point. These centers (or means) are not specifically data points from the data, but rather the <strong>averages</strong> of all the data points predicted in the respective clusters. For the problem of creating customer segments, a cluster&#8217;s center point corresponds to <strong>the average customer of that segment</strong>. Since the data is currently reduced in dimension and scaled by a logarithm, we can recover the representative customer spending from these data points by applying the inverse transformations.</p>
</div>
<div class="paragraph">
<p>In the code block below, you will need to implement the following:
 - Apply the inverse transform to <code>centers</code> using <code>pca.inverse_transform</code> and assign the new centers to <code>log_centers</code>.
 - Apply the inverse function of <code>np.log</code> to <code>log_centers</code> using <code>np.exp</code> and assign the true centers to <code>true_centers</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># TODO: Inverse transform the centers
log_centers = pca.inverse_transform(centers)

# TODO: Exponentiate the centers
true_centers = np.exp(log_centers)

# Display the true centers
segments = ['Segment {}'.format(i) for i in range(0,len(centers))]
true_centers = pd.DataFrame(np.round(true_centers), columns = data.keys())
true_centers.index = segments
display(true_centers)</code></pre>
</div>
</div>
<div class="paragraph">
<p>&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Fresh&lt;/th&gt;
      &lt;th&gt;Milk&lt;/th&gt;
      &lt;th&gt;Grocery&lt;/th&gt;
      &lt;th&gt;Frozen&lt;/th&gt;
      &lt;th&gt;Detergents_Paper&lt;/th&gt;
      &lt;th&gt;Delicatessen&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Segment 0&lt;/th&gt;
      &lt;td&gt;9606.0&lt;/td&gt;
      &lt;td&gt;2068.0&lt;/td&gt;
      &lt;td&gt;2675.0&lt;/td&gt;
      &lt;td&gt;2195.0&lt;/td&gt;
      &lt;td&gt;331.0&lt;/td&gt;
      &lt;td&gt;752.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Segment 1&lt;/th&gt;
      &lt;td&gt;3812.0&lt;/td&gt;
      &lt;td&gt;6414.0&lt;/td&gt;
      &lt;td&gt;9838.0&lt;/td&gt;
      &lt;td&gt;942.0&lt;/td&gt;
      &lt;td&gt;3242.0&lt;/td&gt;
      &lt;td&gt;886.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_8">Question 8</h3>
<div class="paragraph">
<p>Consider the total purchase cost of each product category for the representative data points above, and reference the statistical description of the dataset at the beginning of this project. <strong>What set of establishments could each of the customer segments represent?</strong>
<strong>Hint:</strong> A customer who is assigned to <code>'Cluster X'</code> should best identify with the establishments represented by the feature set of <code>'Segment X'</code>.</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong>
* Segment 0 : This group of establishments spends below average on Fresh (50-75 percentile), Milk (25-50 percentile), Grocery (25-50 percentile), Frozen (50-75 percentile), Detergents_Paper (25-50 percentile) and Delicatessan (25-50 percentile). Owing to the higher percentile scores of Fresh and Frozen products, I would classify this segment to be restaurants.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Segment 1: This group spends below average on Fresh (25-50 percentile), Frozen (25-50 percentile), Delicatessen (25-50 percentile) and above average on Milk (50-75 percentile), Grocery (50-75 percentile), Detergents_Paper (50-75 percentile). Due to the high spending on Milk, Grocery and Detergents_Paper, I would classify this segment as a retail store.</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="_question_9">Question 9</h3>
<div class="paragraph">
<p><strong>For each sample point, which customer segment from</strong> <strong><strong>Question 8</strong></strong> <strong>best represents it? Are the predictions for each sample point consistent with this?</strong></p>
</div>
<div class="paragraph">
<p>Run the code block below to find which cluster each sample point is predicted to be.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Display the predictions
for i, pred in enumerate(sample_preds):
    print "Sample point", i, "predicted to be in Cluster", pred</code></pre>
</div>
</div>
<div class="literalblock">
<div class="content">
<pre>Sample point 0 predicted to be in Cluster 1
Sample point 1 predicted to be in Cluster 0
Sample point 2 predicted to be in Cluster 0</pre>
</div>
</div>
<div class="paragraph">
<p><strong>Answer:</strong>
My earlier prediction is confirmed as Sample 0 looks like a retail store while the other two points look like restaurants! :)</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_conclusion">Conclusion</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In this final section, you will investigate ways that you can make use of the clustered data. First, you will consider how the different groups of customers, the <strong><strong>customer segments</strong></strong>, may be affected differently by a specific delivery scheme. Next, you will consider how giving a label to each customer (which <strong>segment</strong> that customer belongs to) can provide for additional features about the customer data. Finally, you will compare the <strong><strong>customer segments</strong></strong> to a hidden variable present in the data, to see whether the clustering identified certain relationships.</p>
</div>
<div class="sect2">
<h3 id="_question_10">Question 10</h3>
<div class="paragraph">
<p>Companies will often run [A/B tests](<a href="https://en.wikipedia.org/wiki/A/B_testing" class="bare">https://en.wikipedia.org/wiki/A/B_testing</a>) when making small changes to their products or services to determine whether making that change will affect its customers positively or negatively. The wholesale distributor is considering changing its delivery service from currently 5 days a week to 3 days a week. However, the distributor will only make this change in delivery service for customers that react positively. <strong>How can the wholesale distributor use the customer segments to determine which customers, if any, would react positively to the change in delivery service?</strong>
<strong>Hint:</strong> Can we assume the change affects all customers equally? How can we determine which group of customers it affects the most?</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> We have clustered the customers into two segments - Retailers and Restaurants. What could the potential negative and positive impacts on these two groups be?</p>
</div>
<div class="paragraph">
<p>|   |Positives   | Negatives   |
|---|---|---|
| Retailers  | Lower frequency could reduce stocking costs for the retailer.  | Milk products could be one of the perishable products impacted by lowered frequency   |
| Restaurants  | If the restaurant is large, could help in organizing pantry etc.  | Perishables in the categories of Fresh and Delicatessen could be adversely affected.  |</p>
</div>
<div class="paragraph">
<p>A/B tests would be useful in confirming the above hypothesis or reveal if one segment prefers lowering delivery frequency over the other. We can do this by randomly sampling the two segments and reducing the frequency for them and observing their reactions.</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_11">Question 11</h3>
<div class="paragraph">
<p>Additional structure is derived from originally unlabeled data when using clustering techniques. Since each customer has a <strong><strong>customer segment</strong></strong> it best identifies with (depending on the clustering algorithm applied), we can consider <strong>'customer segment'</strong> as an <strong>engineered feature</strong> for the data. Assume the wholesale distributor recently acquired ten new customers and each provided estimates for anticipated annual spending of each product category. Knowing these estimates, the wholesale distributor wants to classify each new customer to a <strong><strong>customer segment</strong></strong> to determine the most appropriate delivery service.
<strong>How can the wholesale distributor label the new customers using only their estimated product spending and the</strong> <strong><strong>customer segment</strong></strong> <strong>data?</strong>
<strong>Hint:</strong> A supervised learner could be used to train on the original customers. What would be the target variable?</p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong>
After clustering, we have separated the data into n(2) segments. Hence, we could apply a supervised learner to train on the original data with the n segments as labels. The segments would be the target variables. For instance, a support vector machine could be used to represent the difference in the segments using hyperplabes. This supervised model could then be used on the ten new customers to predict their segments.</p>
</div>
<div class="paragraph">
<p>Another approach would be to use semi supervised learning which uses partial labelled data such as the classified segments as well as the new data. Source: <a href="https://en.wikipedia.org/wiki/Semi-supervised_learning" class="bare">https://en.wikipedia.org/wiki/Semi-supervised_learning</a></p>
</div>
</div>
<div class="sect2">
<h3 id="_visualizing_underlying_distributions">Visualizing Underlying Distributions</h3>
<div class="paragraph">
<p>At the beginning of this project, it was discussed that the <code>'Channel'</code> and <code>'Region'</code> features would be excluded from the dataset so that the customer product categories were emphasized in the analysis. By reintroducing the <code>'Channel'</code> feature to the dataset, an interesting structure emerges when considering the same PCA dimensionality reduction applied earlier to the original dataset.</p>
</div>
<div class="paragraph">
<p>Run the code block below to see how each data point is labeled either <code>'HoReCa'</code> (Hotel/Restaurant/Cafe) or <code>'Retail'</code> the reduced space. In addition, you will find the sample points are circled in the plot, which will identify their labeling.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-python" data-lang="python"># Display the clustering results based on 'Channel' data
vs.channel_results(reduced_data, outliers, pca_samples)</code></pre>
</div>
</div>
<div class="paragraph">
<p>![png](output_64_0.png)</p>
</div>
</div>
<div class="sect2">
<h3 id="_question_12">Question 12</h3>
<div class="paragraph">
<p><strong>How well does the clustering algorithm and number of clusters you&#8217;ve chosen compare to this underlying distribution of Hotel/Restaurant/Cafe customers to Retailer customers? Are there customer segments that would be classified as purely 'Retailers' or 'Hotels/Restaurants/Cafes' by this distribution? Would you consider these classifications as consistent with your previous definition of the customer segments?</strong></p>
</div>
<div class="paragraph">
<p><strong>Answer:</strong> The number of clusters decided after calculating silhouette scores is consistent with the underlying distribution,i.e., both have two clusters. There are some points which could be classified as purely HoReCa or Retailer on the extreme ends of the clusters, but there are some points in the middle which overlap(have confidences ~50%). These classifications are also consistent with our definitions of customer segments as we roughly defined the left cluster to be restaurants and the right to be retail stores.</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p><strong>Note</strong>: Once you have completed all of the code implementations and successfully answered each question above, you may finalize your work by exporting the iPython Notebook as an HTML document. You can do this by using the menu above and navigating to
<strong>File &#8594; Download as &#8594; HTML (.html)</strong>. Include the finished document along with this notebook as your submission.</p>
</div>
</blockquote>
</div>
</div>
</div>
</div>]]></description><link>https://anshu92.github.io/blog/2017/01/22/Customer-Segments-Project.html</link><guid isPermaLink="true">https://anshu92.github.io/blog/2017/01/22/Customer-Segments-Project.html</guid><category><![CDATA[Machine Learning]]></category><category><![CDATA[ Unsupervised Learning]]></category><dc:creator><![CDATA[Anshuman Sahoo]]></dc:creator><pubDate>Sun, 22 Jan 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[First Post]]></title><description><![CDATA[<div class="imageblock">
<div class="content">
<img src="https://anshu92.github.io/blog/images/christmasprofile.JPG" alt="Christmas Profile" width="400" height="300">
</div>
</div>
<div class="paragraph">
<p>Hi, welcome! I am a 24 year old guy living in Toronto. I am interested in a lot of things like technology, the interconnectedness of things, the human brain, music, books and esoteric adventures.</p>
</div>
<div class="paragraph">
<p>I wished to chronicle my growth as a person as well as leave a record for psychologists to examine in case&#8230;&#8203;well, just in case. I also feel obligated to put my glorious adjustment to anti epilpetic drugs over the past year as a reason for this journaling activity. (Been taking an epileptic drug called Tegretol since I was 10 &#8594; Slowed my brain down for a few years coincinding with my years in university &#8594; Now I m back and with a rejuvinated spirit for learning and fighting the power, which is still my brain lol)</p>
</div>
<div class="paragraph">
<p>That&#8217;s a good segue to tell everyone about my current employment situtation. I spent the last 6 months working for a startup that builds tools for epileptics. I was developing seizure detection algorithms for them, but for various reasons I quit a couple of weeks ago. I still think they ll be a successful company because their mission is pretty complimentary to the needs of 1 in 26 people in this world (Check them out : <a href="http://www.neutun.com/" class="bare">http://www.neutun.com/</a>). I worked on their seizure detection algorithms and testing. Here&#8217;s what i did : <a href="https://www.youtube.com/watch?v=Es_uIpyG4FE" class="bare">https://www.youtube.com/watch?v=Es_uIpyG4FE</a> . Anyway, I have been interviewing to join a few cool projects in machine learning, which is a field that has caught me right in its gaze of unfiltered possibilities. I had an interview with Qualcomm last Friday which went pretty alright and I&#8217;m hopeful.</p>
</div>
<div class="paragraph">
<p>So yes, that&#8217;s where I am - partially glad to be spending this Canadian winter in the comforts of my room and working on personal projects including a rigorous quest to achieve physical optimization.</p>
</div>
<div class="paragraph">
<p>I have a few blog posts coming up - a book review and about the Gross National Happiness idea in Bhutan. So I hope wanderers and friends will come back and read my thoughts on those.</p>
</div>
<div class="paragraph">
<p>Soon.</p>
</div>
<div class="paragraph">
<p>Anshuman<br>
Toronto<br>
17 Jan 2017</p>
</div>]]></description><link>https://anshu92.github.io/blog/2017/01/17/First-Post.html</link><guid isPermaLink="true">https://anshu92.github.io/blog/2017/01/17/First-Post.html</guid><category><![CDATA[Introduction]]></category><category><![CDATA[ Personal]]></category><dc:creator><![CDATA[Anshuman Sahoo]]></dc:creator><pubDate>Tue, 17 Jan 2017 00:00:00 GMT</pubDate></item></channel></rss>